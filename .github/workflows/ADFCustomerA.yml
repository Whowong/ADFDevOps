# This is a basic workflow to help you get started with Actions

name: CICD Azure Data Factory Customer A

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "CustomerABranch" branch
  push:
    branches: [ "CustomerABranch" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_run:
    workflows: [CICD Azure Data Factory New]
    types:
      - completed
    
  workflow_dispatch:

env:
  ResourceGroup: ADF_DevOps_Demo

permissions:
      id-token: write
      contents: read
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: 'CustomerABranch'

      - name: Export ARM Template
        id: export
        uses: Azure/data-factory-export-action@v1.0.2
        with:
          id: ${{ secrets.ADFDevResourceID }}
        
      # Uploading our artifact from adf_publish branch
      - uses: actions/upload-artifact@v3
        with:
          name: adf-artifact
          path: ${{ steps.export.outputs.arm-template-directory }}
          
  QA_Deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: QA
    steps:
    
      # Downloading the artifact we uploaded earlier
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: adf-artifact

      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 
          
      # Deploying to UAT environment
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.ResourceGroup }}
          template: ARMTemplateForFactory.json
          parameters: factoryName=ADF-AHCSADemo-QA AzureKeyVault_properties_typeProperties_baseUrl=${{ secrets.KeyVaultURL }} default_properties_Environment_value=QA
      
      #- name: Deploy resources to QA
      #  uses: Azure/data-factory-deploy-action@v1.2.0
      #  with:
      #    resourceGroupName: ${{ env.ResourceGroup }}
      #    dataFactoryName: ADF-AHCSADemo-QA
      #    armTemplateFile: ARMTemplateForFactory.json
      #    additionalParameters: 'AzureKeyVault_properties_typeProperties_baseUrl=${{ secrets.KeyVaultURL }} default_properties_Environment_value=QA'
          
  PROD_Deploy:
    runs-on: ubuntu-latest
    needs: QA_Deploy
    environment: Production
    steps:
    
      # Downloading the artifact we uploaded earlier
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: adf-artifact

      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 
          
      # Deploying to UAT environment
      - name: Deploy resources to Production
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ env.ResourceGroup }}
          dataFactoryName: ADF-AHCSADemo-Prod
          armTemplateFile: ARMTemplateForFactory.json
          additionalParameters: 'AzureKeyVault_properties_typeProperties_baseUrl=${{ secrets.KeyVaultURL }} default_properties_Environment_value=Prod'
